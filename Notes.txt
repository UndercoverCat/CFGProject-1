Things to do: 
- move user_api functons to app.py 
- look through all the frontend and remove all the irrelevant console.log()
-Make sure you create an object and pass the password from config file to the class 
-Get unit tests from Nasian 
-Let the instructors know that they need to put in their own config 

- Need to make sure all the function names are put at the top of every file 

- New function creatred called verify_product_id , make sure it works and make sure unittest has been done for it 

- Check what happens in function add_wish_list_func(user_id,product_id) when you put the wrong product ID 
- on the front end  
- Remember that at the moment we are using a fake user_id I created, make sure you are using the actual one. the one you get from the profile page 



- Explain why some functions are used in the main.py and not for the frontend: We just wanted to display basic functionality on the front end but alot of 
the functions created in wishlist and user info would be used when we want to add additional features to the project in future 

- Need to go through user_api.py and include all the functions. Find out from sophie which files depend on it and make sure my changes don't create conflicts 
eg does the verify_login_api(username,email) affect her main file which she used for testing 

- Add sophies exception handling for 


- What is user db_utils OOP??? what file is that ?


To do list:
- get final obf script 
- get updated code for georgia 
- check that the test files still work even when you are getting a file 
in a different folder (ie different directory branch)
- add 1 dummy user info that instructor can use to login 




Things to tell the instructors: 
